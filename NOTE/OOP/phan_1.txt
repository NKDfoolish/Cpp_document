1. Trình bày:
//Thuộc tính là gì?
-> Là những đặc điểm nhận dạng của 1 lớp
//Phương thức là gì
-> Là các chức năng liên quan của 1 lớp

//class là gì ?
-> Là bản thiết kế của đối tượng
//object là gì ?
-> đối tượng là thể hiện của lớp

//Trừu tượng là gì?
-> là công việc phân tích, sàng lọc các thuộc tính và phương thức cần thiết cho bài toán
//Đóng gói là gì?
-> là 1 cách thức giúp hạn chế , ngăn chặn các lập trình viên khác khi sử dụng lại code của mình sẽ không thay đổi những phương thức, thuộc tính quan trọng
2. Có bao nhiêu tầm vực, chi tiết ?
-> có 3 tầm vực:
+ Public : truy cập ở khắp nới
+ protected : chỉ truy cập ở lớp nội tại và các lớp con kế thừa
+ private : chỉ truy cập ở lớp nội tại

Code:
1. Xây dựng menu quản lý 3 ông nv(3 đối tượng) 6 chức năng(Nhập xuất)
_____________________________________________________________________________________________________________
#include <iostream>
#include <string>
using namespace std;

class nv_sua_ong_nuoc {
protected:
	string ten;
	string ma_nv;
	int luong;
	int luong_1h;
	int so_h_lam;

public:
	void nhap() {
		cout << "Nhap ten: "; getline(cin, this->ten);
		cout << "Nhap ma nhan vien: "; getline(cin, this->ma_nv);
		cout << "Nhap luong nhan vien: "; cin >> this->luong;
		cout << "Nhap luong 1 gio: "; cin >> this->luong_1h;
		cout << "Nhap so gio lam: "; cin >> this->so_h_lam;
	}

	void xuat() {
		cout << "Ten nhan vien: " << this->ten << endl;
		cout << "Ma nhan vien: " << this->ma_nv << endl;
		cout << "Luong nhan vien: " << this->luong << endl;
		cout << "Luong 1 gio: " << this->luong_1h << endl;
		cout << "So gio lam: " << this->so_h_lam << endl;
	}

public:
	nv_sua_ong_nuoc() {

	}
	
	~nv_sua_ong_nuoc() {

	}
};

class nv_sua_xe_om {
protected:
	string ten;
	string ma_nv;
	int luong;
	int luong_1km;
	int so_km_da_di;

public:
	void nhap() {
		cout << "Nhap ten: "; getline(cin, this->ten);
		cout << "Nhap ma nhan vien: "; getline(cin, this->ma_nv);
		cout << "Nhap luong nhan vien: "; cin >> this->luong;
		cout << "Nhap luong 1 gio: "; cin >> this->luong_1km;
		cout << "Nhap so gio lam: "; cin >> this->so_km_da_di;
	}

	void xuat() {
		cout << "Ten nhan vien: " << this->ten << endl;
		cout << "Ma nhan vien: " << this->ma_nv << endl;
		cout << "Luong nhan vien: " << this->luong << endl;
		cout << "Luong 1 gio: " << this->luong_1km << endl;
		cout << "So gio lam: " << this->so_km_da_di << endl;
	}

public:
	nv_sua_xe_om() {

	}

	~nv_sua_xe_om() {

	}
};

class nv_giao_hang {
protected:
	string ten;
	string ma_nv;
	int luong;
	int luong_1sp;
	int so_sp_da_giao;

public:
	void nhap() {
		cout << "Nhap ten: "; getline(cin, this->ten);
		cout << "Nhap ma nhan vien: "; getline(cin, this->ma_nv);
		cout << "Nhap luong nhan vien: "; cin >> this->luong;
		cout << "Nhap luong 1 gio: "; cin >> this->luong_1sp;
		cout << "Nhap so gio lam: "; cin >> this->so_sp_da_giao;
	}

	void xuat() {
		cout << "Ten nhan vien: " << this->ten << endl;
		cout << "Ma nhan vien: " << this->ma_nv << endl;
		cout << "Luong nhan vien: " << this->luong << endl;
		cout << "Luong 1 gio: " << this->luong_1sp << endl;
		cout << "So gio lam: " << this->so_sp_da_giao << endl;
	}

public:
	nv_giao_hang() {

	}

	~nv_giao_hang() {

	}
};

int main() {
	nv_sua_ong_nuoc nv_1;
	nv_sua_xe_om nv_2;
	nv_giao_hang nv_3;
	bool running = true;
	while (running)
	{
		system("cls");
		cout << "\t\t=============== OPTIONS ================\n";
		cout << "\t\t1. Nhap thong tin nhan vien sua ong nuoc.\n";
		cout << "\t\t2. Nhap thong tin nhan vien xe om.\n";
		cout << "\t\t3. Nhap thong tin nhan vien giao hang.\n";
		cout << "\t\t4. Xuat thong tin nhan vien sua ong nuoc.\n";
		cout << "\t\t5.Xuat thong tin nhan vien xe om.\n";
		cout << "\t\t6. Xuat thong tin nhan vien giao hang.\n";
		cout << "\t\t0. Thoat khoi chuong trinh.\n";
		int lc; cout << "Nhap lua chon cua ban: "; cin >> lc;
		cin.ignore();
		switch (lc)
		{
		case 0:
		{
			cout << "\n\n==> Ket thuc chuong trinh <==\n";
			running = false;
			break;
		}
		case 1:
		{
			nv_1.nhap();
			break;
		}
		case 2:
		{
			nv_2.nhap();
			break;
		}
		case 3:
		{
			nv_3.nhap();
			break;
		}
		case 4:
		{
			nv_1.xuat();
			system("pause");
			break;
		}
		case 5:
		{
			nv_2.xuat();
			system("pause");
			break;
		}
		case 6:
		{
			nv_3.xuat();
			system("pause");
			break;
		}
		}
	}

	return 0;
}
________________________________________________________________________________________________________________
2*. Xây dựng menu quản lý 3 danh sách nhân viên(Nên tìm hiểu kế thừa) Nâng cao không bắt buộc
________________________________________________________________________________________________________________
#include <iostream>
#include <string>
#define MAX 100
using namespace std;

class nv_sua_ong_nuoc {
protected:
	string ten;
	string ma_nv;
	int luong;
	int luong_1h;
	int so_h_lam;

public:
	void nhap() {
		cout << "Nhap ten: "; getline(cin, this->ten);
		cout << "Nhap ma nhan vien: "; getline(cin, this->ma_nv);
		cout << "Nhap luong nhan vien: "; cin >> this->luong;
		cout << "Nhap luong 1 gio: "; cin >> this->luong_1h;
		cout << "Nhap so gio lam: "; cin >> this->so_h_lam;
	}

	void xuat() {
		cout << "Ten nhan vien: " << this->ten << endl;
		cout << "Ma nhan vien: " << this->ma_nv << endl;
		cout << "Luong nhan vien: " << this->luong << endl;
		cout << "Luong 1 gio: " << this->luong_1h << endl;
		cout << "So gio lam: " << this->so_h_lam << endl;
	}

public:
	nv_sua_ong_nuoc() {

	}
	
	~nv_sua_ong_nuoc() {

	}
};

class nv_sua_xe_om {
protected:
	string ten;
	string ma_nv;
	int luong;
	int luong_1km;
	int so_km_da_di;

public:
	void nhap() {
		cout << "Nhap ten: "; getline(cin, this->ten);
		cout << "Nhap ma nhan vien: "; getline(cin, this->ma_nv);
		cout << "Nhap luong nhan vien: "; cin >> this->luong;
		cout << "Nhap luong 1 gio: "; cin >> this->luong_1km;
		cout << "Nhap so gio lam: "; cin >> this->so_km_da_di;
	}

	void xuat() {
		cout << "Ten nhan vien: " << this->ten << endl;
		cout << "Ma nhan vien: " << this->ma_nv << endl;
		cout << "Luong nhan vien: " << this->luong << endl;
		cout << "Luong 1 gio: " << this->luong_1km << endl;
		cout << "So gio lam: " << this->so_km_da_di << endl;
	}

public:
	nv_sua_xe_om() {

	}

	~nv_sua_xe_om() {

	}
};

class nv_giao_hang {
protected:
	string ten;
	string ma_nv;
	int luong;
	int luong_1sp;
	int so_sp_da_giao;

public:
	void nhap() {
		cout << "Nhap ten: "; getline(cin, this->ten);
		cout << "Nhap ma nhan vien: "; getline(cin, this->ma_nv);
		cout << "Nhap luong nhan vien: "; cin >> this->luong;
		cout << "Nhap luong 1 gio: "; cin >> this->luong_1sp;
		cout << "Nhap so gio lam: "; cin >> this->so_sp_da_giao;
	}

	void xuat() {
		cout << "Ten nhan vien: " << this->ten << endl;
		cout << "Ma nhan vien: " << this->ma_nv << endl;
		cout << "Luong nhan vien: " << this->luong << endl;
		cout << "Luong 1 gio: " << this->luong_1sp << endl;
		cout << "So gio lam: " << this->so_sp_da_giao << endl;
	}

public:
	nv_giao_hang() {

	}

	~nv_giao_hang() {

	}
};

int main() {
	nv_sua_ong_nuoc nv_1[MAX];
	nv_sua_xe_om nv_2[MAX];
	nv_giao_hang nv_3[MAX];
	bool running = true;
	int sl1, sl2, sl3;

	while (running)
	{
		system("cls");
		cout << "\t\t=============== OPTIONS ================\n";
		cout << "\t\t1. Them nhan vien vao danh sach nhan vien sua ong nuoc.\n";
		cout << "\t\t2. Them nhan vien vao danh sach nhan vien xe om.\n";
		cout << "\t\t3. Them nhan vien vao danh sach nhan vien giao hang.\n";
		cout << "\t\t4. Xuat thong tin danh sach nhan vien sua ong nuoc.\n";
		cout << "\t\t5.Xuat thong tin danh sach nhan vien xe om.\n";
		cout << "\t\t6. Xuat thong tin danh sach nhan vien giao hang.\n";
		cout << "\t\t0. Thoat khoi chuong trinh.\n";
		int lc; cout << "Nhap lua chon cua ban: "; cin >> lc;
		cin.ignore();
		switch (lc)
		{
		case 0:
		{
			cout << "\n\n==> Ket thuc chuong trinh <==\n";
			running = false;
			break;
		}
		case 1:
		{
			cout << "Nhap so luong nhan vien can them: "; cin >> sl1;
			for (int i = 0; i < sl1; i++)
			{
				cin.ignore();
				cout << "\n\t\t--- Nhap thong tin nhan vien sua ong nuoc thu " << i + 1 << ": ---\n" << endl;
				nv_1[i].nhap();
			}
			break;
		}
		case 2:
		{
			cout << "Nhap so luong nhan vien can them: "; cin >> sl2;
			for (int i = 0; i < sl2; i++)
			{
				cin.ignore();
				cout << "\n\t\t--- Nhap thong tin nhan vien xe om thu " << i + 1 << ": ---\n" << endl;
				nv_2[i].nhap();
			}
			break;
		}
		case 3:
		{
			cout << "Nhap so luong nhan vien can them: "; cin >> sl3;
			for (int i = 0; i < sl3; i++)
			{
				cin.ignore();
				cout << "\n\t\t--- Nhap thong tin nhan vien giao hang thu " << i + 1 << ": ---\n" << endl;
				nv_3[i].nhap();
			}
			break;
		}
		case 4:
		{
			cout << "===> Xuat danh sach nhan vien sua ong nuoc <===" << endl;
			for (int i = 0; i < sl1; i++)
			{
				cout << "\t--- Nhan vien thu " << i + 1 << ": ---\n" << endl;
				nv_1[i].xuat();
			}
			system("pause");
			break;
		}
		case 5:
		{
			cout << "===> Xuat danh sach nhan vien xe om <===" << endl;
			for (int i = 0; i < sl2; i++)
			{
				cout << "\t--- Nhan vien thu " << i + 1 << ": ---\n" << endl;
				nv_2[i].xuat();
			}
			system("pause");
			break;
		}
		case 6:
		{
			cout << "===> Xuat danh sach nhan vien giao hang <===" << endl;
			for (int i = 0; i < sl3; i++)
			{
				cout << "\t--- Nhan vien thu " << i + 1 << ": ---\n" << endl;
				nv_3[i].xuat();
			}
			system("pause");
			break;
		}
		}
	}

	return 0;
}
_______________________________________________________________________________________________________________
=================================== KE THUA ====================================
/cú pháp:/
class <tên_class_con> : <phạm_vi_truy_cập> <tên_class_cha>
{
    // code goes here
};
/Phạm vi truy cập:/
giả sử A là lớp cha của B
public:
Các thuộc tính public của A sẽ trở thành thuộc tính public của B
Các thuộc tính protected của A sẽ trở thành protected của B
private:
Các thuộc tính public của A sẽ trở thành thuộc tính private của B
Các thuộc tính protected của A sẽ trở thành private của B
protected:
Các thuộc tính public của A sẽ trở thành thuộc tính protected của B
Các thuộc tính protected của A sẽ trở thành thuộc tính protected của B

==============================================================================
#include <iostream>
#include <string>
#define MAX 100
using namespace std;

class nv {
protected:
	string ten;
	string ma_nv;
	int luong;

public:
	void nhap() {
		cout << "Nhap ten: "; getline(cin, this->ten);
		cout << "Nhap ma nhan vien: "; getline(cin, this->ma_nv);
	}

	void xuat() {
		cout << "Ten nhan vien: " << this->ten << endl;
		cout << "Ma nhan vien: " << this->ma_nv << endl;
	}

public:
	nv() {
		this->luong = 0;
	}

	~nv() {

	}
};

class nv_sua_ong_nuoc : public nv {
protected:
	int luong;
	int luong_1h;
	int so_h_lam;

public:
	void nhap() {
		nv::nhap();
		cout << "Nhap luong nhan vien: "; cin >> this->luong;
		cout << "Nhap luong 1 gio: "; cin >> this->luong_1h;
		cout << "Nhap so gio lam: "; cin >> this->so_h_lam;
	}

	void xuat() {
		nv::xuat();
		cout << "Luong nhan vien: " << this->luong << endl;
		cout << "Luong 1 gio: " << this->luong_1h << endl;
		cout << "So gio lam: " << this->so_h_lam << endl;
	}

public:
	nv_sua_ong_nuoc() {

	}
	
	~nv_sua_ong_nuoc() {

	}
};

class nv_sua_xe_om : public nv {
protected:
	int luong_1km;
	int so_km_da_di;

public:
	void nhap() {
		nv::nhap();
		cout << "Nhap luong nhan vien: "; cin >> this->luong;
		cout << "Nhap luong 1 gio: "; cin >> this->luong_1km;
		cout << "Nhap so gio lam: "; cin >> this->so_km_da_di;
	}

	void xuat() {
		nv::xuat();
		cout << "Luong nhan vien: " << this->luong << endl;
		cout << "Luong 1 gio: " << this->luong_1km << endl;
		cout << "So gio lam: " << this->so_km_da_di << endl;
	}

public:
	nv_sua_xe_om() {

	}

	~nv_sua_xe_om() {

	}
};

class nv_giao_hang : public nv {
protected:
	int luong_1sp;
	int so_sp_da_giao;

public:
	void nhap() {
		nv::nhap();
		cout << "Nhap luong nhan vien: "; cin >> this->luong;
		cout << "Nhap luong 1 gio: "; cin >> this->luong_1sp;
		cout << "Nhap so gio lam: "; cin >> this->so_sp_da_giao;
	}

	void xuat() {
		nv::xuat();
		cout << "Luong nhan vien: " << this->luong << endl;
		cout << "Luong 1 gio: " << this->luong_1sp << endl;
		cout << "So gio lam: " << this->so_sp_da_giao << endl;
	}

public:
	nv_giao_hang() {

	}

	~nv_giao_hang() {

	}
};

int main() {
	nv_sua_ong_nuoc nv_1[MAX];
	nv_sua_xe_om nv_2[MAX];
	nv_giao_hang nv_3[MAX];
	bool running = true;
	int sl1, sl2, sl3;

	while (running)
	{
		system("cls");
		cout << "\t\t=============== OPTIONS ================\n";
		cout << "\t\t1. Them nhan vien vao danh sach nhan vien sua ong nuoc.\n";
		cout << "\t\t2. Them nhan vien vao danh sach nhan vien xe om.\n";
		cout << "\t\t3. Them nhan vien vao danh sach nhan vien giao hang.\n";
		cout << "\t\t4. Xuat thong tin danh sach nhan vien sua ong nuoc.\n";
		cout << "\t\t5. Xuat thong tin danh sach nhan vien xe om.\n";
		cout << "\t\t6. Xuat thong tin danh sach nhan vien giao hang.\n";
		cout << "\t\t0. Thoat khoi chuong trinh.\n";
		int lc; cout << "Nhap lua chon cua ban: "; cin >> lc;
		cin.ignore();
		switch (lc)
		{
		case 0:
		{
			cout << "\n\n==> Ket thuc chuong trinh <==\n";
			running = false;
			break;
		}
		case 1:
		{
			cout << "Nhap so luong nhan vien can them: "; cin >> sl1;
			for (int i = 0; i < sl1; i++)
			{
				cin.ignore();
				cout << "\n\t\t--- Nhap thong tin nhan vien sua ong nuoc thu " << i + 1 << ": ---\n" << endl;
				nv_1[i].nhap();
			}
			break;
		}
		case 2:
		{
			cout << "Nhap so luong nhan vien can them: "; cin >> sl2;
			for (int i = 0; i < sl2; i++)
			{
				cin.ignore();
				cout << "\n\t\t--- Nhap thong tin nhan vien xe om thu " << i + 1 << ": ---\n" << endl;
				nv_2[i].nhap();
			}
			break;
		}
		case 3:
		{
			cout << "Nhap so luong nhan vien can them: "; cin >> sl3;
			for (int i = 0; i < sl3; i++)
			{
				cin.ignore();
				cout << "\n\t\t--- Nhap thong tin nhan vien giao hang thu " << i + 1 << ": ---\n" << endl;
				nv_3[i].nhap();
			}
			break;
		}
		case 4:
		{
			cout << "===> Xuat danh sach nhan vien sua ong nuoc <===" << endl;
			for (int i = 0; i < sl1; i++)
			{
				cout << "\t--- Nhan vien thu " << i + 1 << ": ---\n" << endl;
				nv_1[i].xuat();
			}
			system("pause");
			break;
		}
		case 5:
		{
			cout << "===> Xuat danh sach nhan vien xe om <===" << endl;
			for (int i = 0; i < sl2; i++)
			{
				cout << "\t--- Nhan vien thu " << i + 1 << ": ---\n" << endl;
				nv_2[i].xuat();
			}
			system("pause");
			break;
		}
		case 6:
		{
			cout << "===> Xuat danh sach nhan vien giao hang <===" << endl;
			for (int i = 0; i < sl3; i++)
			{
				cout << "\t--- Nhan vien thu " << i + 1 << ": ---\n" << endl;
				nv_3[i].xuat();
			}
			system("pause");
			break;
		}
		}
	}

	return 0;
}